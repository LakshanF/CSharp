Goals:
 - Write up of the current status of Diagnsotics in AOT
 - Proposal for way forward including 8.0 recommendations

 Resources
  - https://docs.microsoft.com/en-us/dotnet/core/diagnostics/


Local resources:
 - laptop
  - C:\work\core\LakshanF\CSharp\src\aot\experiments\Diagnostics\Logging


A) - Logging
..\..\..\..\..\run.bat

C:\work\core\Tools\PerfView.exe

DiagnsoticSource, EventSource

Demo:1:4

1) .NET
 
dotnet publish -r win-x64 --self-contained true

C:\Work\Core\LakshanF\CSharp\src\aot\experiments\Diagnostics\Logging\EventSource\DotNet\bin\Debug\net7.0\win-x64\publish\DotNetTest.exe
71 MB (with App size around 152 KB)

a) PerfView
Can See events (see below for nettrace stats)

b) dotnet-trace
pushd C:\Work\Core\LakshanF\CSharp\src\aot\experiments\Diagnostics\Logging\EventSource\DotNet\bin\Debug\net7.0\win-x64\publish

dotnet-trace collect --providers Demo -- DotNetTest.exe

Ex. DotNetTest.exe_20221106_060019.nettrace (152 KB)

C:\work\core\Test\8_18\sdk\Diagnostics\EventSource\DotNet\bin\Debug\net7.0\win-x64\publish\DotNetTest.exe_20220829_162804.nettrace

Can see events

Name	Count	AverageSize	StackCount
Microsoft-Windows-DotNETRuntimeRundown/Method/DCStopVerbose	620	262	0
Microsoft-Windows-DotNETRuntimeRundown/Method/ILToNativeMapDCStop	20	271	0
Microsoft-Windows-DotNETRuntimeRundown/Loader/ModuleDCStop	4	576	0
Microsoft-Windows-DotNETRuntimeRundown/Loader/DomainModuleDCStop	4	324	0
Microsoft-Windows-DotNETRuntimeRundown/Loader/AssemblyDCStop	4	196	0
Demo/DebugMessage	2	49	2
Demo/AppStarted	1	50	1
Demo/Request/Start	1	4	1
Demo/Request/Stop	1	4	1
Microsoft-DotNETCore-EventPipe/ProcessInfo	1	58	0
Microsoft-Windows-DotNETRuntimeRundown/Runtime/Start	1	309	0
Microsoft-Windows-DotNETRuntimeRundown/Method/DCStopInit	1	2	0
Microsoft-Windows-DotNETRuntimeRundown/Loader/AppDomainDCStop	1	34	0
Microsoft-Windows-DotNETRuntimeRundown/Method/DCStopComplete	1	2	0

2) NativeAOT
dotnet publish -r win-x64 -c Debug /p:PublishAot=true

C:\Work\Core\LakshanF\CSharp\src\aot\experiments\Diagnostics\Logging\EventSource\NativeAOT\bin\Debug\net7.0\win-x64\publish\NativeAotTest.exe
6 MB

C:\work\core\Test\8_18\sdk\Diagnostics\EventSource\PerfView\NativeAOT

a) PerfView (Can NOT see relevant events even though some related events can be seen)
 - C:\work\core\Tools\PerfView.exe
 - launch the app via the collect option
 - add the following to the "Addtional Providers", "Demo:1:4"
  

 - Related Events
Microsoft-Windows-DotNETRuntime/Exception/Start
Microsoft-Windows-DotNETRuntime/GC/AllocationTick
Microsoft-Windows-DotNETRuntime/GC/CreateSegment



b) dotnet-trace
https://docs.microsoft.com/en-us/dotnet/core/diagnostics/dotnet-trace
  Enables the collection of .NET Core traces of a running process without a native profiler.

pushd C:\Work\Core\LakshanF\CSharp\src\aot\experiments\Diagnostics\Logging\EventSource\NativeAOT\bin\Debug\net7.0\win-x64\publish

dotnet-trace collect --providers Demo -- NativeAotTest.exe

collect --providers Demo -- C:\work\core\LakshanF\CSharp\src\aot\experiments\Diagnostics\Logging\EventSource\NativeAOT\bin\Debug\net7.0\win-x64\publish\NativeAotTest.exe

PROBABLE CAUSE:
 - EventPipe is not NativeAOT friendly and dotnet tracing tools (dotnet-trace, counters, gcdump) to not work
    + EventPipe port to runtime (C++) was started but needs to happen
    + https://docs.microsoft.com/en-us/dotnet/core/diagnostics/eventpipe
      * However, because EventPipe is a runtime built-in component, its scope is limited to managed code and the runtime itself.
    + It seems to expect the application that is being monitored for trace/logging to be managed (See callstack below)
      * ReversedDiagnosticsServer.Accept time outs
        - private readonly HandleableCollection<IpcEndpointInfo> _endpointInfos = new HandleableCollection<IpcEndpointInfo>();
        - IpcEndpointInfo: Represents a runtine instance connection to a reversed diagnostics server.
  - Read Diagnostics port
    + https://docs.microsoft.com/en-us/dotnet/core/diagnostics/diagnostic-port
      * The .NET Core runtime exposes a service endpoint that allows other processes to send diagnostic commands and receive responses over an IPC channe

POSSIBLE SOLUTION:
  - Make EventPipe handle nativeaot apps as well
    + How? https://docs.microsoft.com/en-us/dotnet/core/diagnostics/diagnostics-client-library

C:\Work\Core\LakshanF\CSharp\src\aot\experiments\Diagnostics\Logging\EventSource\NativeAOT\bin\Debug\net7.0\win-x64\publish>dotnet-trace collect --providers Demo -- NativeAotTest.exe

Provider Name                           Keywords            Level               Enabled By
Demo                                    0xFFFFFFFFFFFFFFFF  Verbose(5)          --providers

Launching: NativeAotTest.exe 
Unable to start tracing session - the target app failed to connect to the diagnostics port. This may happen if the target application is running .NET Core 3.1 or older versions. Attaching at startup is only available from .NET 5.0 or later.
[ERROR] System.TimeoutException: The operation has timed out.
   at Microsoft.Diagnostics.NETCore.Client.HandleableCollection`1.Handle(Handler handler, TimeSpan timeout) in /_/src/Microsoft.Diagnostics.NETCore.Client/HandleableCollection.cs:line 156
   at Microsoft.Diagnostics.NETCore.Client.HandleableCollection`1.Handle(TimeSpan timeout) in /_/src/Microsoft.Diagnostics.NETCore.Client/HandleableCollection.cs:line 131
   at Microsoft.Diagnostics.NETCore.Client.ReversedDiagnosticsServer.Accept(TimeSpan timeout) in /_/src/Microsoft.Diagnostics.NETCore.Client/ReversedServer/ReversedDiagnosticsServer.cs:line 141
   at Microsoft.Internal.Common.Utils.DiagnosticsClientBuilder.Build(CancellationToken ct, Int32 processId, String diagnosticPort, Boolean showChildIO, Boolean printLaunchCommand) in /_/src/Tools/Common/ReversedServerHelpers/ReversedServerHelpers.cs:line 225
   at Microsoft.Diagnostics.Tools.Trace.CollectCommandHandler.Collect(CancellationToken ct, IConsole console, Int32 processId, FileInfo output, UInt32 buffersize, String providers, String profile, TraceFileFormat format, TimeSpan duration, String clrevents, String clreventlevel, String name, String diagnosticPort, Boolean showchildio, Boolean resumeRuntime) in /_/src/Tools/dotnet-trace/CommandLine/Commands/CollectCommand.cs:line 157

B) Debugging
Debug 
 - VS: debenv -debugexe <pathToNativeAotExe>
 - Open the source
 - setup a bp and start debugging (F5)

Observations
 - Stack (mangled names but reasonable)
 - Disassebmly has debug symbols
 - F10, F11, Local Views, virtual methods (FEEFEEFOO)
 - Not working: Interface calls
 - Partially working: yield return, state machine

ASK:
- Dump Debugging: to be comtaible with coreclr
	* During development, build time debugging experience will be coreclr (nativeaot comes at publish) and that can be sufficient


C) Dotnet-trace (AOT it)
https://github.com/dotnet/diagnostics
c:\work\core\main\diagnostics

C:\work\core\main\diagnostics\artifacts\bin\dotnet-trace\Release\net7.0\win-x64\publish\dotnet-trace.exe

-----------------

dotnet add package Microsoft.Diagnostics.NETCore.Client --version 0.2.351802

dotnet add package Microsoft.Diagnostics.Tracing.TraceEvent --version 3.0.5

dotnet remove package Microsoft.Diagnostics.Tracing.TraceEvent --version 3.0.5

C:\Work\Core\main\runtime\src\coreclr\tools\aot\ilc.sln
C:\Work\Core\main\runtime\artifacts\bin\repro\x64\Debug\compile-with-Debug-libs.rsp
C:\Work\Core\main\runtime\src\coreclr\tools\aot\ILCompiler\reproNative\reproNative.vcxproj




- Does not work in either main or CurrentWork3
build.cmd clr.aot+libs -rc Release
C:\Work\Core\main\runtime\artifacts\bin\repro\x64\Release\compile-with-Release-libs.rsp
C:\Work\Core\CurrentWork3\runtime\artifacts\bin\repro\x64\Release\compile-with-Release-libs.rsp

 - works in main
 - work in CurrentWork3
build.cmd clr.aot+libs -rc Debug

C:\Work\Core\CurrentWork3\runtime\src\coreclr\tools\aot\ilc.sln
C:\Work\Core\CurrentWork3\runtime\artifacts\bin\repro\x64\Debug\compile-with-Debug-libs.rsp

C:\Work\Core\CurrentWork3\runtime\src\coreclr\tools\aot\ILCompiler\reproNative\reproNative.vcxproj



1>   Creating library C:\Work\Core\CurrentWork3\runtime\src\coreclr\tools\aot\ILCompiler\reproNative\x64\Debug\reproNative.lib and object C:\Work\Core\CurrentWork3\runtime\src\coreclr\tools\aot\ILCompiler\reproNative\x64\Debug\reproNative.exp
1>Runtime.WorkstationGC.lib(ds-sources.c.obj) : error LNK2019: unresolved external symbol "bool __cdecl ds_ipc_pal_init(void)" (?ds_ipc_pal_init@@YA_NXZ) referenced in function "bool __cdecl ds_server_init(void)" (?ds_server_init@@YA_NXZ)

https://github.com/LakshanF/runtime/blob/ExperimentEventPipe2/src/coreclr/nativeaot/Runtime/diagnosticserveradapter.h#L16

Error	LNK2019	unresolved external symbol "bool __cdecl ds_ipc_pal_init(void)" (?ds_ipc_pal_init@@YA_NXZ) referenced in function "bool __cdecl ds_server_init(void)" (?ds_server_init@@YA_NXZ)	reproNative	C:\Work\Core\CurrentWork3\runtime\src\coreclr\tools\aot\ILCompiler\reproNative\Runtime.WorkstationGC.lib(ds-sources.c.obj)	1	

ds_server_init, (void) https://github.com/LakshanF/runtime/blob/ExperimentEventPipe2/src/native/eventpipe/ds-server.c#L200

https://github.com/LakshanF/runtime/blob/ExperimentEventPipe2/src/native/eventpipe/ds-ipc-pal-namedpipe.c#L105


artifacts\obj\coreclr\windows.x64.Debug

C:\Work\Core\CurrentWork3\runtime\artifacts\obj\coreclr\windows.x64.Debug

C:\Work\Core\main\runtime\artifacts\obj\coreclr\windows.x64.Debug

/showIncludes /d1PP /P 



bp coreclr!ep_init


ds_server_init

    __debugbreak();



--------------------------------
ds-ipc.c
bool
ds_ipc_stream_factory_init (void)
{
	ep_ipc_stream_factory_callback_set (ds_ipc_stream_factory_any_suspended_ports);

-->	ds_rt_port_array_alloc (&_ds_port_array);
	--> return ds_rt_port_array_is_valid (&_ds_port_array);
}

-->ds_rt_port_array_alloc (&_ds_port_array);
ds-rt-coreclr.h
DS_RT_DEFINE_ARRAY (port_array, ds_rt_port_array_t, ds_rt_port_array_iterator_t, DiagnosticsPort *)

ep-rt-coreclr.h
template<typename ARRAY_TYPE>
static
inline
void
_rt_coreclr_array_alloc (ARRAY_TYPE *ep_array)
{
	STATIC_CONTRACT_NOTHROW;
	EP_ASSERT (ep_array != NULL);

	ep_array->array = new (nothrow) typename ARRAY_TYPE::array_type_t ();
}


-->ds_rt_port_array_is_valid (&_ds_port_array);
ds-rt-coreclr.h
DS_RT_DEFINE_ARRAY (port_array, ds_rt_port_array_t, ds_rt_port_array_iterator_t, DiagnosticsPort *)

ep-rt-coreclr.h
template<typename ARRAY_TYPE, typename CONST_ARRAY_TYPE = const ARRAY_TYPE>
static
inline
bool
_rt_coreclr_array_is_valid (CONST_ARRAY_TYPE *ep_array)
{
	STATIC_CONTRACT_NOTHROW;
	return (ep_array->array != NULL);
}


---------------------------------------------
Michal's PR, https://github.com/dotnet/runtime/pull/77884
 - C:\Work\Core\CurrentWork2\runtime\src\coreclr\nativeaot\Common\src\Internal\Runtime\CompilerHelpers\StartupCodeHelpers.cs
  + RuntimeImports.RhpCreateTypeManager
  + RuntimeImports.RhGetModuleSection
  + DehydratedDataCommand

------------------------------------------------

dumpbin /HEADERS ep-sources.c.obj>C:\Work\Core\LakshanF\CSharp\src\aot\experiments\Diagnostics\Logging\PortEventPipe2\investigate\linker_err\ep-sources_main.txt

/HEADERS
/ALL /RAWDATA:NONE

Build started...
1>------ Build started: Project: reproNative, Configuration: Debug x64 ------
1>main.cpp
1>   Creating library C:\Work\Core\CurrentWork3\runtime\src\coreclr\tools\aot\ILCompiler\reproNative\x64\Debug\reproNative.lib and object C:\Work\Core\CurrentWork3\runtime\src\coreclr\tools\aot\ILCompiler\reproNative\x64\Debug\reproNative.exp
1>Runtime.WorkstationGC.lib(ep-sources.c.obj) : error LNK2019: unresolved external symbol "__declspec(dllimport) int __cdecl FreeLibrary(void *)" (__imp_?FreeLibrary@@YAHPEAX@Z) referenced in function "void __cdecl sample_profiler_unload_dependencies(void)" (?sample_profiler_unload_dependencies@@YAXXZ)
1>Runtime.WorkstationGC.lib(ep-sources.c.obj) : error LNK2019: unresolved external symbol "struct HWND__ * __cdecl LoadLibraryW(wchar_t const *)" (?LoadLibraryW@@YAPEAUHWND__@@PEB_W@Z) referenced in function "bool __cdecl sample_profiler_load_dependencies(void)" (?sample_profiler_load_dependencies@@YA_NXZ)
1>C:\Work\Core\CurrentWork3\runtime\src\coreclr\tools\aot\ILCompiler\reproNative\x64\Debug\reproNative.exe : fatal error LNK1120: 2 unresolved externals
1>Done building project "reproNative.vcxproj" -- FAILED.
========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========
========== Elapsed 00:01.284 ==========

C:\Work\Core\main\runtime\artifacts\obj\coreclr\windows.x64.Debug\dlls\mscoree\coreclr


C:\Work\Core\CurrentWork3\runtime\artifacts\obj\coreclr\windows.x64.Debug


C:\Work\Core\LakshanF\CSharp\src\aot\experiments\Diagnostics\Logging\PortEventPipe2\investigate\


C:\Work\Core\CurrentWork3\runtime\src\coreclr\tools\aot\ilc.sln
C:\Work\Core\CurrentWork3\runtime\artifacts\bin\repro\x64\Debug\compile-with-Debug-libs.rsp

C:\Work\Core\CurrentWork3\runtime\src\coreclr\tools\aot\ILCompiler\reproNative\reproNative.vcxproj


ep.C
ep_requires_lock_not_held (void)
{
	ep_rt_config_requires_lock_not_held ();
}


windiff \\chrisahnx74\LakshanF\EventPipe\2022_11_17\001\Diff\Old \\chrisahnx74\LakshanF\EventPipe\2022_11_17\001\Diff\New


// 11/20/22
 - Uber Goals 
  + Get lock check working
  + Walk through the code and come up with hypothesis
  + Be in a state to write to Chris for status and next steps

 - Needed steps
  + check in csharp, including Chris notes
  + Get pre-processor files for the following, both main and CurrentWork3, both clean and with errors, both release and debug
    * ds-ipc-pal-namedpipe.c.obj
    * ds-sources.c.obj 
    * startup.cpp.obj 