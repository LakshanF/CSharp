"C:\Program Files\dotnet\dotnet" "C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\NuGet.Build.Tasks.Console.dll" "CleanupAssetsForUnsupportedProjects=True;Recursive=True" 
"C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\MSBuild.dll" "c:\work\core\CurrentWork\runtime\src\libraries\System.Collections\tests\System.Collections.Tests.csproj" 
"TestNativeAot=true;Configuration=Release;MSBuildRestoreSessionId=f0f688ab-cfed-474e-9882-df5ae689ff38;ExcludeRestorePackageImports=true;OriginalMSBuildStartupDirectory=c:\work\core\CurrentWork\runtime\src\libraries\System.Collections\tests"

"C:\Program Files\dotnet\dotnet" "C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\NuGet.Build.Tasks.Console.dll" "CleanupAssetsForUnsupportedProjects=True;Recursive=True" "C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\MSBuild.dll" "c:\work\core\CurrentWork\runtime\src\libraries\System.Collections\tests\System.Collections.Tests.csproj" "TestNativeAot=true;Configuration=Release;MSBuildRestoreSessionId=f0f688ab-cfed-474e-9882-df5ae689ff38;ExcludeRestorePackageImports=true;OriginalMSBuildStartupDirectory=c:\work\core\CurrentWork\runtime\src\libraries\System.Collections\tests"

{"Message":"Determining projects to restore...","MessageType":3}
{"Importance":1,"Message":"Evaluated 6 project(s) in 2120ms (6 builds, 0 failures).","MessageType":3}
{"Message":"'[]' is not a valid version string.","MessageType":1,"SenderName":"MSBuildStaticGraphRestore"}



"C:\Program Files\dotnet\dotnet" "C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\NuGet.Build.Tasks.Console.dll"
"CleanupAssetsForUnsupportedProjects=True;Recursive=True" "C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\MSBuild.dll" "C:\work\core\Test\8_1\test3\test3.csproj" 
"TestNativeAot=true;Configuration=Release;MSBuildRestoreSessionId=f0f688ab-cfed-474e-9882-df5ae689ff38;ExcludeRestorePackageImports=true;OriginalMSBuildStartupDirectory=C:\work\core\Test\8_1\test3"

"C:\Program Files\dotnet\dotnet" "C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\NuGet.Build.Tasks.Console.dll" "CleanupAssetsForUnsupportedProjects=True;Recursive=True" "C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\MSBuild.dll" "C:\work\core\Test\8_1\test3\test3.csproj" "TestNativeAot=true;Configuration=Release;MSBuildRestoreSessionId=f0f688ab-cfed-474e-9882-df5ae689ff38;ExcludeRestorePackageImports=true;OriginalMSBuildStartupDirectory=C:\work\core\Test\8_1\test3"
{"Message":"Determining projects to restore...","MessageType":3}
{"Importance":1,"Message":"Evaluated 1 project(s) in 1593ms (1 builds, 0 failures).","MessageType":3}
{"Importance":1,"Message":"Restoring packages for C:\\work\\core\\Test\\8_1\\test3\\test3.csproj...","MessageType":3}
{"Importance":1,"Message":"Generating MSBuild file C:\\work\\core\\Test\\8_1\\test3\\obj\\test3.csproj.nuget.g.props.","MessageType":3}
{"Importance":1,"Message":"Writing assets file to disk. Path: C:\\work\\core\\Test\\8_1\\test3\\obj\\project.assets.json","MessageType":3}
{"Message":"Restored C:\\work\\core\\Test\\8_1\\test3\\test3.csproj (in 303 ms).","MessageType":3}
{"Importance":1,"Message":"","MessageType":3}
{"Importance":1,"Message":"NuGet Config files used:","MessageType":3}
{"Importance":1,"Message":"    C:\\work\\core\\Test\\NuGet.Config","MessageType":3}
{"Importance":1,"Message":"    C:\\Users\\lakshanf\\AppData\\Roaming\\NuGet\\NuGet.Config","MessageType":3}
{"Importance":1,"Message":"    C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config","MessageType":3}
{"Importance":1,"Message":"","MessageType":3}
{"Importance":1,"Message":"Feeds used:","MessageType":3}
{"Importance":1,"Message":"    https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet7/nuget/v3/index.json","MessageType":3}
{"Importance":1,"Message":"    https://api.nuget.org/v3/index.json","MessageType":3}


C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\MSBuild.dll -bl -consoleloggerparameters:Summary -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\dotnet.dll -maxcpucount -property:TestNativeAot=true -property:Configuration=Release -restore -verbosity:diag /t:Test .\System.Collections.Tests.csproj


"C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\MSBuild.dll" -bl -consoleloggerparameters:Summary -distributedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\dotnet.dll -maxcpucount -property:TestNativeAot=true -property:Configuration=Release -restore -verbosity:diag /t:Test .\System.Collections.Tests.csproj



c:\work\core\CurrentWork\runtime\dotnet.cmd build -c Release /t:Test /p:TestNativeAot=true -bl -verbosity:diag

c:\work\core\CurrentWork2\runtime\dotnet.cmd build -c Release /t:Test /p:TestNativeAot=true -bl


Investigation_2 - TEst failing to run (due to PublishAot set to true)
 - Where is PublishAot set to true
    + Runtime, seems safe
    + SDK
        # Microsoft.NET.Sdk.targets - 2
            - RID Warning
            -  <Import Project="$(ILCompilerTargetsPath)" Condition="'$(PublishAot)' == 'true'"/>
        # Microsoft.NET.Sdk.FrameworkReferenceResolution.targets - 1
            - ProcessFrameworkReferences, sets AotEnabled to true which causes the download to happen
        # Microsoft.NET.Publish.targets - 4
            - telemetry x2
            - GeneratePublishDependencyFile

Investigation_1 - First Failure of restore
 - Pass: Replacing org worked
 - Pass: Adding just the new target worked
 
 Explore_1
 - Fail: Replacing the content of the old target with the new details ('@(ResolvedILCompilerPack)' == '')
 - Fail: If trying to set PublishAot to be true

 Explore_2
 - Executing the new target will fail (by setting publishaot to true) irrespective of the old target

 Explore_3
 - Setting PublishAot to true will cause the test to fail even without the new target

  Unhandled Exception: System.InvalidOperationException: Operation is not valid due to the current state of the object.
     at Internal.Reflection.Core.Execution.ReflectionCoreExecution.InitializeExecutionDomain(ReflectionDomainSetup, Exe
  cutionEnvironment) + 0x94
     at Internal.Reflection.Execution.ReflectionExecution.Initialize() + 0x35
     at System.Collections.Tests!<BaseAddress>+0x2eda6a

Explore_4
 - c:\work\core\CurrentWork\runtime\eng\testing\tests.singlefile.targets(37,3): error MSB4019: The imported project "c:\wo
rk\core\CurrentWork\runtime\artifacts\bin\coreclr\windows.x64.Release\build\Microsoft.DotNet.ILCompiler.targets" was no
t found. Confirm that the expression in the Import declaration "c:\work\core\CurrentWork\runtime\artifacts\bin\coreclr\
windows.x64.Release\build\Microsoft.DotNet.ILCompiler.targets" is correct, and that the file exists on disk. [c:\work\c
ore\CurrentWork\runtime\src\libraries\System.Collections\tests\System.Collections.Tests.csproj]

C:\work\core\CurrentWork\runtime\eng\testing\tests.singlefile.targets
<Import Project="$(CoreCLRBuildIntegrationDir)Microsoft.DotNet.ILCompiler.targets" Condition="'$(TestNativeAot)' == 'true'" />


Not working
CommandLineArguments = "c:\work\core\CurrentWork\runtime\artifacts\bin\coreclr\windows.x64.Release\ilc\\ilc" @"c:\work\core\CurrentWork\runtime\artifacts\obj\System.Collections.Tests\Release\net7.0\native\System.Collections.Tests.ilc.rsp"

working


Explore_5
Why double copies of everything when building in repo
Resources
 - PrivateSdkAssemblies, runtime\artifacts\bin\coreclr\windows.x64.Release\aotsdk
 - Microsoft.NETCore.Native.targets

Qn: Why is Microsoft.NETCore.Native.targets getting imported twice by failing

Hyp_1
 - look at BuildFrameworkNativeObjects.proj: Looks like this project will only import 

  <Import Project="$(MSBuildThisFileDirectory)\Microsoft.DotNet.ILCompiler.SingleEntry.targets" Condition="'$(IlcCalledViaPackage)' == 'true'" />
   <Import Project="Microsoft.NETCore.Native.targets" Condition="'$(IlcCalledViaPackage)' == ''" />

Hyp_2 (try '$(TestNativeAot)' == 'true')
<FAIL>
 - C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\Sdks\Microsoft.NET.Sdk\Sdk\Sdk.targets at (0;0)
    + C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\Microsoft.CSharp.targets at (37;3)
    + C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\Microsoft.CSharp.CurrentVersion.targets at (34;3)
    + C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\Microsoft.Common.targets at (327;5)
    + c:\work\core\CurrentWork\runtime\src\libraries\Directory.Build.targets at (51;3)
    + c:\work\core\CurrentWork\runtime\eng\testing\tests.targets at (129;3)
    + c:\work\core\CurrentWork\runtime\eng\testing\tests.singlefile.targets at (185;3)
    + c:\work\core\CurrentWork\runtime\artifacts\bin\coreclr\windows.x64.Release\build\Microsoft.DotNet.ILCompiler.SingleEntry.targets at (37;3)
    + c:\work\core\CurrentWork\runtime\artifacts\bin\coreclr\windows.x64.Release\build\Microsoft.NETCore.Native.targets at (73;3)

 - C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\Sdks\Microsoft.NET.Sdk\Sdk\Sdk.targets at (0;0)
    + C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.targets at (41;3)
    Import: C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.ILCompiler.targets at (1158;3)
    Import: C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\Sdks\Microsoft.DotNet.ILCompiler\Sdk\Sdk.targets at (14;3)
        Import: C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\Sdks\Microsoft.DotNet.ILCompiler\build\Microsoft.DotNet.ILCompiler.targets at (15;3)
            Import: C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\Sdks\Microsoft.DotNet.ILCompiler\build\Microsoft.NETCore.Native.targets at (65;3)

<PASS>
Import: C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\Sdks\Microsoft.NET.Sdk\Sdk\Sdk.targets at (0;0)
..
                Import: c:\work\core\CurrentWork2\runtime\src\libraries\Directory.Build.targets at (51;3)
    + c:\work\core\CurrentWork2\runtime\eng\testing\tests.targets at (129;3)
    + c:\work\core\CurrentWork2\runtime\eng\testing\tests.singlefile.targets at (185;3)
    + c:\work\core\CurrentWork2\runtime\artifacts\bin\coreclr\windows.x64.Release\build\Microsoft.DotNet.ILCompiler.SingleEntry.targets at (37;3)
    + c:\work\core\CurrentWork2\runtime\artifacts\bin\coreclr\windows.x64.Release\build\Microsoft.NETCore.Native.targets at (73;3)


Sol_1
C:\work\core\CurrentWork\runtime\src\coreclr\nativeaot\BuildIntegration\Microsoft.DotNet.ILCompiler.SingleEntry.targets
 -   <Import Project="$(MSBuildThisFileDirectory)\Microsoft.DotNet.ILCompiler.SingleEntry.targets" Condition="'$(PublishAot)' == 'true' and '$(TestNativeAot)' != 'true'"/>

Sol_2 (does not work - System.Collections.Tests.ilc.rsp does not get generated)
C:\work\core\CurrentWork\runtime\eng\testing\tests.singlefile.targets
<Import Project="$(CoreCLRBuildIntegrationDir)Microsoft.DotNet.ILCompiler.SingleEntry.targets" Condition="'$(TestNativeAot)' == 'true'" />


Why are runtime-extra failing
 - Pass (runtime)
    + https://dev.azure.com/dnceng/public/_build/results?buildId=1929242&view=logs&j=7bb91cf6-d57c-5393-cf5c-c884f1e50962&t=e69dda84-63f5-5672-bb62-76f86a3aceb4
    +  D:\a\_work\1\s\build.cmd -ci -arch arm64 -os windows -s clr.aot+libs+libs.tests -c Release /p:TestNativeAot=true /p:RunSmokeTestsOnly=true /p:ArchiveTests=true  /p:CrossBuild=false
    + https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-73416-merge-fdff4f7bbce64e9286/System.Runtime.Tests/1/console.16357540.log?helixlogtype=result
    + https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-73416-merge-fdff4f7bbce64e9286/System.IO.Compression.Tests/1/console.75fbb6dd.log?helixlogtype=result

 - Fail (extra-runtime)
    + https://dev.azure.com/dnceng/public/_build/results?buildId=1929460&view=logs&j=d9366717-4230-52c6-0a51-0b43431c29c7&t=33e0733f-5b58-5758-7849-41eca3237fd5
    +  D:\a\_work\1\s\build.cmd -ci -arch x64 -os windows -s clr.aot+libs+libs.tests -c Release /p:TestNativeAot=true /p:ArchiveTests=true  /p:CrossBuild=false 
    + https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-73416-merge-881f728df8404209b2/System.Numerics.Vectors.Tests/1/console.33d36590.log?helixlogtype=result
    + https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-73416-merge-fadde5f68ce14843bd/System.Numerics.Vectors.Tests/1/console.c5461dad.log?helixlogtype=result



C:\work\core\CurrentWork\runtime\artifacts\obj\System.Reflection.Tests\Release\net7.0\native

 -notrait category=AdditionalTimezoneChecks -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing -xml testResults.xml

    System.Reflection.Tests -> C:\work\core\CurrentWork\runtime\artifacts\bin\System.Reflection.Tests\Release\net7.0\publish\
  System.Collections.Tests -> C:\work\core\CurrentWork\runtime\artifacts\bin\System.Collections.Tests\Release\net7.0\publish\
  System.Collections -> C:\work\core\CurrentWork\runtime\artifacts\bin\System.Collections\ref\Release\net7.0\System.Col
  lections.dll
  System.ObjectModel -> C:\work\core\CurrentWork\runtime\artifacts\bin\System.ObjectModel\ref\Release\net7.0\System.Obj
  ectModel.dll
  System.Linq.Expressions -> C:\work\core\CurrentWork\runtime\artifacts\bin\System.Linq.Expressions\ref\Release\net7.0\
  System.Linq.Expressions.dll
  System.Linq.Expressions -> C:\work\core\CurrentWork\runtime\artifacts\bin\System.Linq.Expressions\Release\net7.0\Syst
  em.Linq.Expressions.dll
  System.Linq.Expressions.Tests -> C:\work\core\CurrentWork\runtime\artifacts\bin\System.Linq.Expressions.Tests\Release
  \net7.0\System.Linq.Expressions.Tests.dll



   Appendum
  - Working around test issues



 ** @TODO - reason more why the sdk path that wasn't touched suddennly became activated with this change!!!
Existing SDK that is not fixed will break the testing since . This is due to "Microsoft.NETCore.Native.targets" getting imported twice, specifically, around
ILC getting an rsp file that contains double the entries. See PrivateSdkAssemblies in the targets file for more information
The workarounds take into consideration that the SDK path is inaccessble to us. So, we will need to shit doen
Workaround 1: Only import from "Microsoft.DotNet.ILCompiler.targets"

copy build_Microsoft.DotNet.ILCompiler.targets "C:\Program Files\dotnet\sdk\7.0.100-preview.6.22352.1\Sdks\Microsoft.DotNet.ILCompiler\build\Microsoft.DotNet.ILCompiler.targets"

 - working around SDK repo issues




  <!-- Target ProcessFrameworkReferences sets the details to download the runtime package but requires setting the version to the explicit package if one exists -->
<!--  <Target Name="SetILCompilerVersionForPackageReference" Condition="'$(AotRuntimePackageLoadedViaSDK)' != 'true' and '$(PublishAot)' == 'true'" BeforeTargets="ProcessFrameworkReferences"> -->
<!--    <ItemGroup>
      <OldKnownILCompilerPack Include="@(KnownILCompilerPack)"/>
      <ILCompilerRefernece Include="@(PackageReference)" Condition="'%(Identity)'=='Microsoft.DotNet.ILCompiler'"/>
    </ItemGroup>-->
    <ItemGroup>
<!--        <KnownILCompilerPack Remove="@(OldKnownILCompilerPack )" Condition="@(ILCompilerReference->'%(Version)')!=''"/>-->
        <KnownILCompilerPack Update="Microsoft.DotNet.ILCompiler"
<!--              TargetFramework="@(OldKnownILCompilerPack ->'%(TargetFramework)')"-->
<!--              ILCompilerPackNamePattern="@(OldKnownILCompilerPack ->'%(ILCompilerPackNamePattern)')" -->
              ILCompilerPackVersion="@(ILCompilerRefernece->'%(Version)')"
<!--              ILCompilerRuntimeIdentifiers="@(OldKnownILCompilerPack ->'%(ILCompilerRuntimeIdentifiers)')"-->
              Condition="@(ILCompilerReference->'%(Version)')!=''"/>
    </ItemGroup>
  <!--</Target>-->


@(PackageReference->'%(Identity)')=='Microsoft.DotNet.ILCompiler'



--------8/9/22

- Microsoft.DotNet.ILCompiler.SingleEntry.targets
eng\testing\tests.singlefile.targets:
  36  
  37:   <Import Project="$(CoreCLRBuildIntegrationDir)Microsoft.DotNet.ILCompiler.SingleEntry.targets" Condition="'$(TestNativeAot)' == 'true'" />
  38  

src\coreclr\nativeaot\BuildIntegration\BuildFrameworkNativeObjects.proj:
C:\work\core\CurrentWork\runtime\src\coreclr\nativeaot\BuildIntegration
C:\work\core\CurrentWork\runtime\dotnet.cmd build BuildFrameworkNativeObjects.proj -bl
  12  
  13:   <Import Project="$(MSBuildThisFileDirectory)\Microsoft.DotNet.ILCompiler.SingleEntry.targets" Condition="'$(IlcCalledViaPackage)' == 'true'" />
  14    <Import Project="Microsoft.NETCore.Native.targets" Condition="'$(IlcCalledViaPackage)' == ''" />

src\coreclr\nativeaot\BuildIntegration\Microsoft.DotNet.ILCompiler.props:
  15           used to import the targets later in the SDK. -->
  16:     <ILCompilerTargetsPath>$(MSBuildThisFileDirectory)Microsoft.DotNet.ILCompiler.SingleEntry.targets</ILCompilerTargetsPath>
  17    </PropertyGroup>

src\coreclr\tools\aot\crossgen2\crossgen2.csproj:
  44    <Import Project="$(R2ROverridePath)" Condition="'$(R2ROverridePath)' != ''" />
  45:   <Import Project="$(CoreCLRBuildIntegrationDir)Microsoft.DotNet.ILCompiler.SingleEntry.targets"
  46            Condition="'$(NativeAotSupported)' == 'true' and '$(RunningPublish)' == 'true'" />



 -Microsoft.NETCore.Native.targets
5 results - 4 files

src\coreclr\nativeaot\BuildIntegration\BuildFrameworkNativeObjects.proj:
  13    <Import Project="$(MSBuildThisFileDirectory)\Microsoft.DotNet.ILCompiler.SingleEntry.targets" Condition="'$(IlcCalledViaPackage)' == 'true'" />
  14:   <Import Project="Microsoft.NETCore.Native.targets" Condition="'$(IlcCalledViaPackage)' == ''" />
  15  

src\coreclr\nativeaot\BuildIntegration\Microsoft.DotNet.ILCompiler.SingleEntry.targets:
  57  
  58:   <Import Project="$(MSBuildThisFileDirectory)\Microsoft.NETCore.Native.targets" Condition="'$(TestNativeAot)' != 'true'"/>
  59  

src\coreclr\nativeaot\BuildIntegration\Microsoft.NETCore.Native.targets:
  2  ***********************************************************************************************
  3: Microsoft.NETCore.Native.targets
  4  

src\tests\Directory.Build.targets:
  519      <!-- Works around "Error: Native compilation can run on x64 and arm64 hosts only"
  520:       Microsoft.NETCore.Native.targets expect IlcHostArch to be set but it doesn't have to -->
  521      <DisableUnsupportedError>true</DisableUnsupportedError>

  539  
  540:   <Import Project="$(CoreCLRBuildIntegrationDir)Microsoft.NETCore.Native.targets" Condition="'$(TestBuildMode)' == 'nativeaot'" />
  541  




1) 8/9/22: Official Tests fail

build.cmd -ci -arch arm64 -os windows -s clr.aot+libs+libs.tests -c Release /p:TestNativeAot=true /p:RunSmokeTestsOnly=true /p:ArchiveTests=true  /p:CrossBuild=false 
build.sh -ci -arch arm64 -os Linux -s clr.aot+libs+libs.tests -c Release /p:TestNativeAot=true /p:RunSmokeTestsOnly=true /p:ArchiveTests=true  /p:CrossBuild=true /p:MonoLLVMUseCxx11Abi=true

build.cmd -ci -arch x64 -os windows -s clr.aot+libs+libs.tests -c Release /p:TestNativeAot=true /p:RunSmokeTestsOnly=true /p:CrossBuild=false -bl

 -notrait category=AdditionalTimezoneChecks -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing -xml testResults.xml

C:\work\core\CurrentWork\runtime\artifacts\bin\System.Collections.Tests\Release\net7.0\publish\

C:\work\core\CurrentWork\runtime\artifacts\bin\System.Collections.Tests\Release\net7.0\publish\
C:\work\core\CurrentWork\runtime\artifacts\bin\System.Reflection.Tests\Release\net7.0\publish\


C:\work\core\main\runtime\artifacts\bin\System.Collections.Tests\Release\net7.0\publish\
C:\work\core\main\runtime\artifacts\bin\System.Reflection.Tests\Release\net7.0\publish\

C:\work\core\CurrentWork\runtime\artifacts\obj\System.Collections.Tests\Release\net7.0\native

Pass (Linux-arm64): NOOOO
https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-73416-merge-0783f78390e4452bb0/System.Collections.Tests/1/console.0d83eb74.log?helixlogtype=result

/root/helix/work/workitem/e /root/helix/work/workitem/e
chmod: cannot access 'System.Collections.Tests': No such file or directory

FAIL (Windows-arm64): 
https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-runtime-refs-pull-73416-merge-2e0ec87b0ab84a678f/System.Collections.Tests/1/console.88bbee8e.log?helixlogtype=result


Main doesnt have defaultrooting

Build windows arm64 Release NativeAOT

 buildConfig: Release
    platforms:
    - windows_arm64
    - Linux_arm64

 - Investigation
C:\work\core\main\runtime\artifacts\obj\System.Collections.Tests\Release\net7.0\native\System.Collections.Tests.ilc.rsp

TrimmerDefaultAction: link


TrimMode
runtime\.packages\microsoft.net.illink.tasks\7.0.100-1.22377.1\build\Microsoft.NET.ILLink.targets

 - Investigation
1) Remove the import check for native targets, TestNativeAot
2) ('$(TestNativeAot)' == 'true' and '$(TrimMode)' == 'full')

Check 2)
BuildFrameworkNativeObjects.proj
  <!--
    BuildFrameworkLib is invoked before IlcCompile in multi-module builds to
    produce the shared framework library on demand
  -->
Check 3)
crossgen2.csproj
https://github.com/dotnet/runtime/blob/main/src/coreclr/tools/aot/crossgen2/crossgen2.csproj#L45-L46
Condition="'$(NativeAotSupported)' == 'true' and '$(RunningPublish)' == 'true'" 


Tests
/__w/1/s/artifacts/bin/coreclr/Linux.x64.Release/build/Microsoft.NETCore.Native.targets(269,5): error MSB3073: The command ""/__w/1/s/artifacts/bin/coreclr/Linux.x64.Release/ilc/ilc" @"/__w/1/s/artifacts/obj/System.Reflection.Metadata.Tests/Release/net7.0/native/System.Reflection.Metadata.Tests.ilc.rsp"" exited with code 1. [/__w/1/s/src/libraries/System.Reflection.Metadata/tests/System.Reflection.Metadata.Tests.csproj]
##[error]artifacts/bin/coreclr/Linux.x64.Release/build/Microsoft.NETCore.Native.targets(269,5): error MSB3073: (NETCORE_ENGINEERING_TELEMETRY=Build) The command ""/__w/1/s/artifacts/bin/coreclr/Linux.x64.Release/ilc/ilc" @"/__w/1/s/artifacts/obj/System.Reflection.Metadata.Tests/Release/net7.0/native/System.Reflection.Metadata.Tests.ilc.rsp"" exited with code 1.

/__w/1/s/build.sh -ci -arch x64 -os Linux -s clr.aot+libs+libs.tests -c Release /p:TestNativeAot=true /p:ArchiveTests=true  /p:CrossBuild=false /p:MonoLLVMUseCxx11Abi=false 


build.cmd -ci -arch x64 -os windows -s clr.aot+libs+libs.tests -c Release /p:TestNativeAot=true /p:CrossBuild=false /p:MonoLLVMUseCxx11Abi=false -bl

build.cmd -arch x64 -os windows -s clr.aot+libs+libs.tests -c Release /p:TestNativeAot=true


C:\work\core\CurrentWork\runtime\artifacts\bin\System.Reflection.Metadata.Tests\Release\net7.0\publish\

-notrait category=AdditionalTimezoneChecks -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing -xml testResults.xml